{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/addNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReduccer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","uiOpenModal","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","resp","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","isSelected","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b86781cf.chunk.js","sourcesContent":["//Objeto que tiene centralizo todos los tipos\r\n//de acciones y asi saber que string para cada \r\n//accion\r\n\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinished: '[auth] Finished checking state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n            \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from '../types/types';\r\n\r\n// Tipo de un evento: \r\n// {\r\n//     id: 'fdbthrhrhnntrhrt',\r\n//     title: 'Cumple de jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Manuel'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n            \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n            \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n           return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinished:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n            \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReduccer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReduccer } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReduccer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n}","\r\n\r\n//acciones para eventos\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const respuesta = await fetchConToken('events', event, 'POST')\r\n            const body = await respuesta.json();\r\n            \r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) )\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json()\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${id}`, {}, 'DELETE' );\r\n\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire( 'Error', body.msg,'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n            console.log( events );\r\n\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async( dispatch ) => {\r\n\r\n        const respuesta = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await respuesta.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const respuesta = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await respuesta.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        \r\n        const respuesta = await fetchConToken( 'auth/renew' );\r\n        const body = await respuesta.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinished });\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'manuel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Manuel',\r\n        rEmail: 'manuel7@gmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword !== rPassword2 ){\r\n            return Swal.fire('Error', 'Passwords must match', 'error')\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword, rName ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { types } from '../types/types';\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>- { user.name } </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n        title: '',\r\n        notes: '',\r\n        start: now.toDate(),\r\n        end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n\r\n    const [ formValues, setFormValues ] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDate = ( e ) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        \r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha de fin debe de ser mayor a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n//if creando, else actualizando \r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { ( activeEvent )? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDate }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/addNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = ( event, start, end, isSelected ) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n    \r\n    const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViweChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem( 'lastView', e );\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor='end'\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViweChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n          \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}